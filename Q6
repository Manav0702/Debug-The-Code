
Problem statement:

Given an array A containing 2*N+2 positive numbers, out of which 2*N numbers exist in pairs whereas the other two number occur exactly once and are distinct. 
Find the other two numbers. Return in increasing order.

Input Format:

A number n
a1
a2..
n numbers

Output Format
2 Non-repeating number

Constraints
1 <= n <= 10^9
1 <= a1,a2.. <= 10^9 

Sample Input
6
23 27 23 17 17 37

Sample Output
27
37

Bug Code:

    vector<int> singleNumber(vector<int> nums) 
    {
        // Code here.
        map<int,int>mp;
        vector<int>ans;
        for(int i=0;i<nums.size();i++)
        {
            mp[nums[i]]++;
        }
        for(int i=0;i<nums.size();i+=2)
        {
        if(mp[nums[i]]!=1)        //To check if it occurs only once in map
        {
            ans.push_back(nums[i]);
        }
        }
        for(int i=0;i<2;i++)         //To return in increasing order
        {
            if(ans[0]<ans[1])
            {
                swap(ans[0],ans[1]);
            }
        }
        return ans;
    


